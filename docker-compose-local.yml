networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: "11.1.0.0/24"

x-function: &backend
  image: education_platform-backend
  pull_policy: never
  env_file:
    - .env

services:
  backend:
    <<: *backend
    build:
      context: backend
      dockerfile: Dockerfile
    networks:
      network:
        ipv4_address: 11.1.0.11
    ports:
      - "8000:8000"
    volumes:
      - ./backend/migrations:/backend/migrations
    user: "${UID}:${GID}"
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    <<: *backend
    networks:
      network:
        ipv4_address: 11.1.0.12
    image: education_platform-backend
    container_name: celery_beat
    entrypoint: [ "celery", "-A", "src.async_tasks.celery_config", "beat", "--loglevel=INFO" ]

  celery_worker:
    <<: *backend
    networks:
      network:
        ipv4_address: 11.1.0.14
    image: education_platform-backend
    container_name: celery_worker
    entrypoint: [ "celery", "-A", "src.async_tasks.celery_config", "worker", "--loglevel=INFO" ]


  redis:
    networks:
      network:
        ipv4_address: 11.1.0.102
    image: redis/redis-stack
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5


  postgres:
    networks:
      network:
        ipv4_address: 11.1.0.100
    image: postgres:13.3
    container_name: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - /data/postgresql/education_platform:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d admin_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    networks:
      network:
        ipv4_address: 11.1.0.10
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=$REACT_APP_API_URL
    env_file:
      - .env
    ports:
      - "4000:80"
    container_name: frontend
